{"version":3,"sources":["core/features/components/CharactersList/charactersList.actions.ts","core/features/components/CharactersList/CharactersItem/CharactersItem.tsx","core/features/components/CharactersList/charactersList.selector.ts","core/features/components/CharactersList/CharactersList.tsx","core/features/shared/CustomButton/CustomButton.tsx","core/features/components/CharactersSearch/charactersSearch.actions.ts","core/features/components/Pagination/Pagination.tsx","core/features/shared/CustomForm/CustomForm.tsx","core/features/shared/CustomInput/CustomInput.tsx","core/features/shared/CustomSelect/CustomSelect.tsx","core/features/components/pages/DetailsPage/detailsPage.actions.ts","core/features/components/CharactersSearch/CharactersSearch.tsx","core/features/components/CharactersSearch/charactersSearch.selector.ts","core/features/components/pages/SearchPage/SearchPage.tsx","core/features/components/pages/HomePage/homePage.tsx","core/features/components/Pagination/pagination.actions.ts","core/features/components/pages/DetailsPage/detailsPage.tsx","App.tsx","core/features/components/CharactersList/charactersList.reducers.ts","core/features/components/pages/DetailsPage/detailsPage.reducer.ts","core/features/components/CharactersSearch/charactersSearch.reducer.ts","core/features/components/Pagination/pagination.reducer.ts","core/store/reducers.ts","core/api/api.ts","core/features/components/CharactersList/charactersList.sagas.ts","core/features/components/pages/DetailsPage/detailsPage.sagas.ts","core/features/components/CharactersSearch/charactersSearch.sagas.ts","core/store/sagas.ts","core/store/store.ts","index.tsx"],"names":["CharactersAllTypes","CharactersItem","name","species","image","stat","id","className","src","alt","to","pathname","style","textDecoration","getCharactersList","state","charactersReducer","charasters","getCharactersLength","charactersLength","CharactersList","characters","useSelector","useState","loading","setLoading","console","log","setTimeout","type","color","height","width","map","person","status","CustomButton","handlerOnClick","field","onClick","CharactersSearch","setLength","length","SET_LENGTH","payload","Pagination","useParams","dispatch","useDispatch","totalPage","activePage","setActivePage","toPrevPage","prevPage","Math","max","toNextPage","nextPage","min","range","start","end","active","arr","i","push","useEffect","currentPage","startPages","endPages","centerPages","boundaryCount","page","LOAD_CHARACTER","index","CustomForm","handlerSubmit","children","onSubmit","CustomInput","placeholder","handlerChange","searchValue","value","onChange","CustomSelect","items","handleChange","item","selected","DetailsPageTypes","getSearch","LOAD_SEARCH","setSearch","SET_SEARCH","toggleLoadMore","LOAD_MORE","getErrorSearch","LOAD_FAILURE","setCharactersMore","SET_LOAD_CHARACTERS","statuses","genders","characterStatus","setCharacterStatus","gender","setGender","search","history","useHistory","replace","handlerOnSubmit","e","preventDefault","target","getStatusLoad","charactersSearch","getLoadMore","loadingMore","getLoadFailure","searchFailure","SearchPage","moreCharacters","isLoading","isLoadingMore","loadFailure","setPage","queryParams","URLSearchParams","window","location","get","LOAD_PAGE","HomePage","CharactersPaginationsTypes","setDetails","LOAD_DETAILS","DetailsPage","details","charactersDetails","DETAILS","setID","App","exact","path","component","initial","url","alive","paginationReducer","action","PAGE","rootReducer","combineReducers","LOAD_SUCCESS","charactersPage","charactersID","getCharactersAPI","parameters","a","preparedParams","Object","entries","key","join","axios","then","data","getCharactersByID","getCharactersSaga","charactersWatcher","call","put","hero","results","info","pages","takeEvery","getDetailsSaga","detailsWatcher","getSearchSaga","getMoreCharacterSaga","seacrhWatcher","delay","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06234156.chunk.js","sourcesContent":["import { CharactersItem } from './charactersList.state';\n\nexport enum CharactersAllTypes {\n  LOAD_SUCCESS = 'CHARACTERS_LOAD_SUCCESS',\n  LOAD_CHARACTER = 'LOAD_CHARACTER',\n  SET_LENGTH = 'SET_LENGTH',\n}\n\ninterface CharactersParameters {\n  page?: number;\n  id?: number,\n  name?: string;\n  status?: string;\n  gender?: string;\n}\n\nexport interface GetCharacters {\n  type: CharactersAllTypes;\n  payload: CharactersParameters;\n}\n\nexport interface Characters {\n  type: CharactersAllTypes;\n  payload: CharactersItem[];\n}\n\nexport interface CharactersLength {\n  type: CharactersAllTypes;\n  payload: number\n}\n\nexport const setCharacters = (hero: CharactersItem[]): Characters => ({\n  type: CharactersAllTypes.LOAD_SUCCESS,\n  payload: hero,\n});\n\nexport const getCharacters = (payload: CharactersParameters): GetCharacters => ({\n  type: CharactersAllTypes.LOAD_CHARACTER,\n  payload,\n});\n\nexport const setLength = (length: number): CharactersLength => ({\n  type: CharactersAllTypes.SET_LENGTH,\n  payload: length,\n});\n\nexport type CharactersActions = Characters;\n","import React from 'react';\n\nimport {\n  Link,\n} from 'react-router-dom';\n\nimport './style.scss';\n\ninterface CharacterItemProps {\n  id: number,\n  name: string;\n  species: string;\n  image: string;\n  stat: string,\n}\n\nconst CharactersItem: React.FC<CharacterItemProps> = ({\n  name, species, image, stat, id,\n}) => (\n  <>\n    <div className=\"characters__item\">\n      <img src={image} alt=\"Characters\" className=\"characters__image\" />\n      <div className=\"characters__information\">\n        <Link\n          to={{\n            pathname: `/details/${id}`,\n          }}\n          style={{ textDecoration: 'none' }}\n        >\n          <h3 className=\"characters__name\">{name}</h3>\n        </Link>\n        <p className=\"characters__species\">\n          {stat}\n          {' '}\n          -\n          {' '}\n          {species}\n        </p>\n        <div className=\"characters__location\">\n          <p className=\"characters__location--info\">Last known location:</p>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nexport default CharactersItem;\n","/* eslint-disable max-len */\nimport { AppState } from '../../../store/state';\nimport { CharactersItem } from './charactersList.state';\n\nexport const getCharactersList = (state: AppState): CharactersItem[] => state.charactersReducer.charasters;\nexport const getCharactersLength = (state: AppState): number => state.charactersLength;\n","import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport CharactersItem from './CharactersItem/CharactersItem';\nimport { getCharactersList } from './charactersList.selector';\n\nimport './style.scss';\n\nconst CharactersList = (): JSX.Element => {\n  const characters = useSelector(getCharactersList);\n  const [loading, setLoading] = useState(true);\n\n  console.log(characters);\n\n  setTimeout(() => {\n    setLoading(false);\n  }, 1000);\n\n  if (loading) {\n    return (\n      <div className=\"loader loader__characters-list\">\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"charachers\">\n      {characters.map((person) => (\n        <CharactersItem\n          key={person.id}\n          name={person.name}\n          species={person.species}\n          image={person.image}\n          stat={person.status}\n          id={person.id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CharactersList;\n","import React from 'react';\n\ninterface ButtonProps {\n  handlerOnClick: (e: React.MouseEvent) => void;\n  className: string,\n  field: string,\n}\n\nconst CustomButton: React.FC<ButtonProps> = ({\n  handlerOnClick, className, field,\n}) => (\n  <button onClick={handlerOnClick} className={`button ${className}`}>{field}</button>\n);\n\nexport default CustomButton;\n","import { CharactersItem } from '../CharactersList/charactersList.state';\n\nexport enum CharactersSearch {\n  LOAD_SEARCH = 'CHARACTERS_LOAD_SEARCH',\n  SET_SEARCH = 'CHARACTERS_SET_SEARCH',\n  LOAD_MORE = 'CHARACTERS_LOAD_MORE',\n  LOAD_FAILURE = 'CHARACTERS_LOAD_FAILURE',\n  SET_PAGE_SEARCH = 'SET_PAGE_SEARCH',\n  SET_LOAD_CHARACTERS = 'SET_LOAD_CHARACTERS',\n  LOAD_PAGE = 'CHARACTERS_LOAD_PAGE',\n}\n\ninterface SearchParameters {\n  page: number,\n  name?: string;\n  status?: string;\n  gender?: string;\n}\n\ninterface Action {\n  type: CharactersSearch;\n}\n\nexport interface GetCharacters extends Action {\n  payload: SearchParameters;\n}\n\nexport interface SetCharacters extends Action {\n  payload: CharactersItem[];\n}\n\nexport interface SetLoadMore extends Action {\n  payload: boolean;\n}\n\nexport interface SetLoadFailure extends Action {\n  payload: boolean,\n}\n\nexport const getSearch = (payload: SearchParameters): GetCharacters => ({\n  type: CharactersSearch.LOAD_SEARCH,\n  payload,\n});\n\nexport const setSearch = (payload: CharactersItem[]): SetCharacters => ({\n  type: CharactersSearch.SET_SEARCH,\n  payload,\n});\n\nexport const toggleLoadMore = (payload: boolean): SetLoadMore => ({\n  type: CharactersSearch.LOAD_MORE,\n  payload,\n});\n\nexport const getErrorSearch = (payload: boolean): SetLoadFailure => ({\n  type: CharactersSearch.LOAD_FAILURE,\n  payload,\n});\n\n/// search action\n\nexport interface SetMoreCharacters extends Action {\n  payload: number\n}\n\nexport const setCharactersMore = (payload: CharactersItem[]): SetCharacters => ({\n  type: CharactersSearch.SET_LOAD_CHARACTERS,\n  payload,\n});\n\nexport const getSearchPage = (payload: SearchParameters): GetCharacters => ({\n  type: CharactersSearch.LOAD_PAGE,\n  payload,\n});\n\nexport type CharactersSearchActions =\n  SetCharacters |\n  GetCharacters |\n  SetLoadMore |\n  SetLoadFailure |\n  SetMoreCharacters;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport CustomButton from '../../shared/CustomButton/CustomButton';\nimport { getCharacters } from '../CharactersList/charactersList.actions';\nimport { getCharactersLength } from '../CharactersList/charactersList.selector';\n\nimport './style.scss';\n\nconst Pagination = (): JSX.Element => {\n  const { id = '1' }: { id: string } = useParams();\n  const dispatch = useDispatch();\n\n  const totalPage: number = useSelector(getCharactersLength);\n\n  // page who we see\n  const [activePage, setActivePage] = useState<number[]>([]);\n\n  const toPrevPage = (): string => {\n    const prevPage = Math.max(1, +id - 1);\n\n    return `/page/${prevPage}`;\n  };\n\n  const toNextPage = (): string => {\n    const nextPage = Math.min(totalPage, +id + 1);\n\n    return `/page/${nextPage}`;\n  };\n\n  const range = (start: number, end: number): number[] => {\n    const initial = start;\n    const active = end;\n    const arr = [];\n\n    for (let i = initial; i <= active; i++) {\n      arr.push(i);\n    }\n\n    return arr;\n  };\n\n  useEffect(() => {\n    const siblingsLength = 1;\n    const maxRange = 5;\n    const currentPage = +id;\n    const boundaryCount = 1;\n\n    const startPages = range(1, Math.min(boundaryCount, totalPage));\n    const endPages = range(Math.min(totalPage, totalPage - boundaryCount + 1), totalPage);\n\n    let centerPages: number[] = [];\n\n    if (currentPage < maxRange) {\n      centerPages = range(boundaryCount + 1, maxRange);\n    } else if (totalPage - maxRange < currentPage) {\n      centerPages = range(totalPage - maxRange, totalPage - boundaryCount);\n    } else {\n      centerPages = range(currentPage - siblingsLength, currentPage + siblingsLength);\n    }\n\n    setActivePage([...startPages, ...centerPages, ...endPages]);\n\n    dispatch(getCharacters({\n      page: +id,\n    }));\n  }, [id, totalPage]);\n\n  return (\n    <div className=\"pagination\">\n      <Link to={toPrevPage}>\n        <CustomButton handlerOnClick={toPrevPage} className=\"pagination__button\" field=\"Prev Page\" />\n      </Link>\n      {activePage.map((index) => (\n        <Link\n          style={{ textDecoration: 'none' }}\n          key={index}\n          to={{\n            pathname: `/page/${index}`,\n          }}\n        >\n          <p className={index === +id ? 'pagination__item--active' : 'pagination__item'}>{index}</p>\n        </Link>\n      ))}\n      <Link to={toNextPage}>\n        <CustomButton handlerOnClick={toNextPage} className=\"pagination__button\" field=\"Next Page\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport './style.scss';\n\ninterface FormProps {\n  handlerSubmit: (e: React.ChangeEvent<HTMLFormElement>) => void;\n  className: string,\n}\n\nconst CustomForm: React.FC<FormProps> = ({ handlerSubmit, children, className }) => (\n  <>\n    <form className={className} onSubmit={handlerSubmit}>\n      {children}\n    </form>\n  </>\n);\n\nexport default CustomForm;\n","import React from 'react';\n\nimport './style.scss';\n\ninterface InputProps {\n  placeholder: string;\n  handlerChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  searchValue: string;\n  className: string,\n}\n\nconst CustomInput: React.FC<InputProps> = ({\n  placeholder, handlerChange, searchValue, className,\n}) => (\n  <input className={`input ${className}`} placeholder={placeholder} value={searchValue} onChange={handlerChange} />\n);\n\nexport default CustomInput;\n","import React from 'react';\n\nimport './style.scss';\n\ninterface CustomSelectProps {\n  items: {\n    id: number;\n    value: string\n  }[];\n  name: string;\n  value: string;\n  handleChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  className: string,\n}\n\nconst CustomSelect: React.FunctionComponent<CustomSelectProps> = ({\n  items, value, name, handleChange, className,\n}) => (\n  <select className={`select ${className}`} name={name} onChange={handleChange} value={value}>\n    {items.map((item) => (\n      <option\n        key={item.id}\n        selected={item.value === value}\n        value={item.value}\n      >\n        {item.value}\n      </option>\n    ))}\n  </select>\n);\n\nexport default CustomSelect;\n","import { CharactersItem } from './detailsPage.state';\n\nexport enum DetailsPageTypes {\n  DETAILS = 'CHARACTERS_DETAILS',\n  LOAD_DETAILS = 'CHARACTERS_LOAD_DETAILS',\n}\n\nexport interface SetID {\n  type: DetailsPageTypes.DETAILS,\n  payload: number\n}\n\nexport interface SetDetails {\n  type: DetailsPageTypes.LOAD_DETAILS,\n  payload: CharactersItem[];\n}\n\nexport const setDetails = (payload: CharactersItem[]): SetDetails => ({\n  type: DetailsPageTypes.LOAD_DETAILS,\n  payload,\n});\n\nexport const setID = (id: number): SetID => ({\n  type: DetailsPageTypes.DETAILS,\n  payload: id,\n});\n\nexport type CharactersPageActions = SetID | SetDetails;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport CustomButton from '../../shared/CustomButton/CustomButton';\nimport CustomForm from '../../shared/CustomForm/CustomForm';\nimport CustomInput from '../../shared/CustomInput/CustomInput';\nimport CustomSelect from '../../shared/CustomSelect/CustomSelect';\nimport { getErrorSearch, getSearch } from './charactersSearch.actions';\n\nconst statuses = [\n  { id: 1, value: 'Alive' }, { id: 2, value: 'Dead' }, { id: 3, value: 'unknown' },\n];\n\nconst genders = [\n  { id: 1, value: 'Female' }, { id: 2, value: 'Male' }, { id: 3, value: 'Genderless' }, { id: 4, value: 'unknown' },\n];\n\nconst CharactersSearch = (): JSX.Element => {\n  const [characterStatus, setCharacterStatus] = useState('Alive');\n  const [gender, setGender] = useState('Female');\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  search.replace(/%20/g, ' ');\n\n  const handlerOnChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setSearch(e.target.value);\n  };\n\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>):void => {\n    setCharacterStatus(e.target.value);\n  };\n\n  const handleGenderChange = (e: React.ChangeEvent<HTMLSelectElement>):void => {\n    setGender(e.target.value);\n  };\n\n  const handlerOnSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n\n    history.push(`/search?name=${search}&gender=${gender}&status=${characterStatus}`);\n    setSearch('');\n\n    dispatch(getSearch({\n      page: 1, name: search || '', gender: gender || '', status: characterStatus || '',\n    }));\n\n    dispatch(getErrorSearch(false));\n  };\n\n  return (\n    <>\n      <div>\n        <CustomForm handlerSubmit={handlerOnSubmit} className=\"form\">\n          <CustomInput\n            placeholder=\"Find your hero\"\n            searchValue={search}\n            handlerChange={handlerOnChange}\n            className=\"characters__input\"\n          />\n          <CustomSelect\n            name=\"characterStatus\"\n            value={characterStatus}\n            handleChange={handleStatusChange}\n            items={statuses}\n            className=\"custom__select\"\n          />\n          <CustomSelect\n            name=\"characterGender\"\n            value={gender}\n            handleChange={handleGenderChange}\n            items={genders}\n            className=\"custom__select\"\n          />\n\n          <CustomButton handlerOnClick={handlerOnSubmit} className=\"pagination__button pagination__button--search\" field=\"Search\" />\n\n        </CustomForm>\n\n      </div>\n    </>\n  );\n};\n\nexport default CharactersSearch;\n","/* eslint-disable max-len */\nimport { AppState } from '../../../store/state';\nimport { CharactersItem } from '../CharactersList/charactersList.state';\n\nexport const getCharactersSearch = (state: AppState): CharactersItem[] => state.charactersSearch.charasters;\nexport const getStatusLoad = (state: AppState): boolean => state.charactersSearch.loading;\nexport const getLoadMore = (state: AppState): boolean => state.charactersSearch.loadingMore;\nexport const getLoadFailure = (state: AppState): boolean => state.charactersSearch.searchFailure;\n\n/// selector search page\nexport const setCharactersMore = (state: AppState): CharactersItem[] => state.charactersSearch.charasters;\n","import React, { useEffect, useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CustomButton from '../../../shared/CustomButton/CustomButton';\nimport { getCharactersLength } from '../../CharactersList/charactersList.selector';\nimport {\n  getSearch, getSearchPage, toggleLoadMore,\n} from '../../CharactersSearch/charactersSearch.actions';\nimport {\n  getLoadFailure, getLoadMore, getStatusLoad, setCharactersMore,\n} from '../../CharactersSearch/charactersSearch.selector';\n\nimport './style.scss';\n\nconst SearchPage = ():JSX.Element => {\n  const moreCharacters = useSelector(setCharactersMore);\n  const isLoading = useSelector(getStatusLoad);\n  const isLoadingMore = useSelector(getLoadMore);\n  const totalPage: number = useSelector(getCharactersLength);\n  const loadFailure = useSelector(getLoadFailure);\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState<number>(1);\n\n  // get URL params\n  const queryParams = new URLSearchParams(window.location.search);\n  const name = queryParams.get('name');\n  const gender = queryParams.get('gender');\n  const status = queryParams.get('status');\n\n  const handlerOnClick = (): void => {\n    if (page === totalPage) return;\n    dispatch(toggleLoadMore(true));\n\n    setPage(page + 1);\n\n    dispatch(getSearchPage({\n      page, name: name || '', gender: gender || '', status: status || '',\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(getSearch({\n      page, name: name || '', gender: gender || '', status: status || '',\n    }));\n  }, [page, name, gender, status]);\n\n  if (loadFailure) return <div><h1>Hero not Found</h1></div>;\n\n  return (\n    <>\n      {!isLoading ? (\n        <div className=\"loader loader__search-page\">\n          <Loader\n            type=\"TailSpin\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n          />\n        </div>\n      ) : (\n        <div className=\"charachers\">\n          {moreCharacters.map((person) => (\n            <div className=\"characters__item\" key={person.id}>\n              <img src={person.image} alt=\"Characters\" className=\"characters__image\" />\n              <div className=\"characters__information\">\n                <Link\n                  to={{\n                    pathname: `/details/${person.id}`,\n                  }}\n                  style={{ textDecoration: 'none' }}\n                >\n                  <h3 className=\"characters__name\">{person.name}</h3>\n                </Link>\n                <p className=\"characters__species\">\n                  {/* {person.stat} */}\n                  {' '}\n                  -\n                  {' '}\n                  {person.species}\n                </p>\n                <div className=\"characters__location\">\n                  <p className=\"characters__location--info\">Last known location:</p>\n                  {/* <p className=\"characters__location--details\">{person.location.name}</p> */}\n                </div>\n              </div>\n            </div>\n          ))}\n\n        </div>\n      )}\n\n      {isLoadingMore ? (\n        <div className=\"loader loader__search-page\">\n          <Loader\n            type=\"TailSpin\"\n            color=\"#00BFFF\"\n            height={50}\n            width={50}\n          />\n        </div>\n      ) : (\n        <CustomButton\n          handlerOnClick={handlerOnClick}\n          className={page === totalPage ? 'button__show-more__disabled' : 'button__show-more'}\n          field=\"Show More\"\n        />\n      )}\n\n    </>\n  );\n};\n\nexport default SearchPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.scss';\n\nconst HomePage = (): JSX.Element => (\n  <div className=\"home__page\">\n    <h1>Rick And Morty Api</h1>\n    <Link to=\"/page/1\" style={{ textDecoration: 'none' }}>\n      <h4 className=\"home__link\">Find your Characters</h4>\n    </Link>\n  </div>\n);\n\nexport default HomePage;\n","export enum CharactersPaginationsTypes {\n  PAGE = 'CHARACTERS_PAGE',\n}\n\nexport interface SetPage {\n  type: CharactersPaginationsTypes.PAGE;\n  payload: number\n}\n\nexport const setPage = (page: number): SetPage => ({\n  type: CharactersPaginationsTypes.PAGE,\n  payload: page,\n});\n\nexport type CharactersPaginationsActions = SetPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { AppState } from '../../../../store/state';\nimport { setID } from './detailsPage.actions';\n\ninterface CharactersPageProps {\n  id: string,\n  name: string;\n  species: string;\n  image: string;\n  type: string,\n  gender: string,\n}\n\nconst DetailsPage: React.FC<CharactersPageProps> = () => {\n  const { id = '1' }: { id: string } = useParams();\n  const details = useSelector((state: AppState) => state.charactersDetails);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setID(+id));\n  }, []);\n\n  return (\n    <div className=\"details\">\n      <img src={details.image} alt=\"Characters\" />\n      <div>\n        <h3>{details.name}</h3>\n        <p>\n          {details.species}\n        </p>\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default DetailsPage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router, Route, Switch,\n} from 'react-router-dom';\n\nimport CharactersList from './core/features/components/CharactersList/CharactersList';\nimport Pagination from './core/features/components/Pagination/Pagination';\n\nimport CharactersSearch from './core/features/components/CharactersSearch/CharactersSearch';\nimport SearchPage from './core/features/components/pages/SearchPage/SearchPage';\nimport HomePage from './core/features/components/pages/HomePage/homePage';\nimport DetailsPage from './core/features/components/pages/DetailsPage/detailsPage';\n\nconst App = (): JSX.Element => (\n  <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/page/:id\">\n          <CharactersSearch />\n          <Pagination />\n          <CharactersList />\n        </Route>\n        <Route path=\"/details/:id\" component={DetailsPage} />\n        <Route path=\"/search/\">\n          <CharactersSearch />\n          <SearchPage />\n        </Route>\n      </Switch>\n\n    </Router>\n  </>\n);\n\nexport default App;\n","import {\n  CharactersActions,\n  CharactersAllTypes,\n  CharactersLength,\n} from './charactersList.actions';\nimport { CharactersListState } from './charactersList.state';\n\nconst initial: CharactersListState = {\n  charasters: [],\n  page: 1,\n  loading: false,\n  loadingMore: true,\n  searchFailure: false,\n};\n\nexport const allCharacters = (state = initial, action: CharactersActions): CharactersListState => {\n  switch (action.type) {\n    case CharactersAllTypes.LOAD_SUCCESS:\n      return {\n        charasters: [...action.payload],\n        page: 1,\n        loading: true,\n        loadingMore: false,\n        searchFailure: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setLength = (state = 1, action: CharactersLength): number => {\n  switch (action.type) {\n    case CharactersAllTypes.SET_LENGTH:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import { CharactersItem } from '../../CharactersList/charactersList.state';\nimport { CharactersPageActions, DetailsPageTypes } from './detailsPage.actions';\n\nconst initialID = 0;\n\nexport const charactersID = (state = initialID, action: CharactersPageActions): number => {\n  switch (action.type) {\n    case DetailsPageTypes.DETAILS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst initial: CharactersItem = {\n  id: 0,\n  name: '',\n  status: '',\n  type: '',\n  gender: '',\n  image: '',\n  url: '',\n  species: '',\n  alive: '',\n  location: '',\n};\n\nexport const charactersDetails = (state = initial, action:CharactersPageActions):CharactersItem => {\n  switch (action.type) {\n    case DetailsPageTypes.LOAD_DETAILS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/* eslint-disable max-len */\nimport { CharactersListState } from '../CharactersList/charactersList.state';\nimport {\n  CharactersSearchActions, CharactersSearch, SetCharacters, SetLoadMore, SetLoadFailure,\n} from './charactersSearch.actions';\n\nconst initial: CharactersListState = {\n  charasters: [],\n  loading: false,\n  loadingMore: false,\n  searchFailure: false,\n  page: 1,\n};\n\nexport const searchCharacters = (state = initial, action: CharactersSearchActions): CharactersListState => {\n  switch (action.type) {\n    case CharactersSearch.SET_SEARCH: {\n      const { payload } = action as SetCharacters;\n\n      return {\n        ...state,\n        charasters: [...payload],\n        loading: true,\n      }; }\n\n    case CharactersSearch.SET_LOAD_CHARACTERS: {\n      const { payload } = action as SetCharacters;\n      return {\n        ...state,\n        charasters: [...state.charasters, ...payload],\n      };\n    }\n\n    case CharactersSearch.LOAD_MORE: {\n      const { payload } = action as SetLoadMore;\n\n      return {\n        ...state,\n        loadingMore: payload,\n      }; }\n\n    case CharactersSearch.LOAD_FAILURE: {\n      const { payload } = action as SetLoadFailure;\n      return {\n        ...state,\n        searchFailure: payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { CharactersPaginationsTypes, CharactersPaginationsActions } from './pagination.actions';\n\nconst initial = 1;\n\nconst paginationReducer = (state = initial, action: CharactersPaginationsActions): number => {\n  switch (action.type) {\n    case CharactersPaginationsTypes.PAGE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default paginationReducer;\n","import { combineReducers } from 'redux';\n\nimport { allCharacters, setLength } from '../features/components/CharactersList/charactersList.reducers';\nimport { charactersDetails, charactersID } from '../features/components/pages/DetailsPage/detailsPage.reducer';\nimport { searchCharacters } from '../features/components/CharactersSearch/charactersSearch.reducer';\nimport paginationReducer from '../features/components/Pagination/pagination.reducer';\n\nconst rootReducer = combineReducers({\n  charactersReducer: allCharacters,\n  charactersPage: paginationReducer,\n  charactersLength: setLength,\n  charactersSearch: searchCharacters,\n  charactersID,\n  charactersDetails,\n});\n\nexport default rootReducer;\n","import axios, { AxiosResponse } from 'axios';\n\ninterface ApiInterface {\n  page?: number,\n  name?: string,\n  status?: string,\n  id?: number,\n  gender?: string,\n}\n\nexport const getCharactersAPI = async (parameters: ApiInterface): Promise<AxiosResponse> => {\n  const preparedParams = Object.entries(parameters).map(([key, value]) => `${key}=${value}`).join('&');\n\n  return axios\n    .get(`https://rickandmortyapi.com/api/character/?${preparedParams}`)\n    .then(({ data }) => data);\n};\n\nexport const getCharactersByID = async (id: number): Promise<AxiosResponse> => axios.get(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => data);\n","import { SagaIterator } from 'redux-saga';\n\nimport {\n  call, put, takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  CharactersAllTypes, getCharacters, setCharacters, setLength,\n} from './charactersList.actions';\nimport { getCharactersAPI } from '../../../api/api';\n\nfunction* getCharactersSaga({ payload }: ReturnType<typeof getCharacters>): SagaIterator {\n  const data = yield call(getCharactersAPI, payload);\n\n  yield put(setCharacters(data.results));\n  yield put(setLength(data.info.pages));\n}\n\nexport function* charactersWatcher():SagaIterator {\n  yield takeEvery(CharactersAllTypes.LOAD_CHARACTER, getCharactersSaga);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { SagaIterator } from '@redux-saga/types';\nimport {\n  call, put, takeEvery,\n} from 'redux-saga/effects';\nimport { getCharactersByID } from '../../../../api/api';\nimport { DetailsPageTypes, setDetails, setID } from './detailsPage.actions';\n\nfunction* getDetailsSaga({ payload }: ReturnType<typeof setID>): SagaIterator {\n  const data = yield call(getCharactersByID, payload);\n\n  yield put(setDetails(data));\n}\n\nexport function* detailsWatcher():SagaIterator {\n  yield takeEvery(DetailsPageTypes.DETAILS, getDetailsSaga);\n}\n","import { SagaIterator } from 'redux-saga';\n\nimport {\n  call, delay, put, takeEvery,\n} from 'redux-saga/effects';\nimport { getCharactersAPI } from '../../../api/api';\nimport { setLength } from '../CharactersList/charactersList.actions';\nimport {\n  CharactersSearch, getErrorSearch, getSearch, setCharactersMore, setSearch, toggleLoadMore,\n} from './charactersSearch.actions';\n\nfunction* getSearchSaga({ payload }: ReturnType<typeof getSearch>): SagaIterator {\n  yield delay(500);\n\n  try {\n    const data = yield call(getCharactersAPI, payload);\n\n    yield put(setLength(data.info.pages));\n    yield put(setSearch(data.results));\n\n    yield put(toggleLoadMore(false));\n  } catch (error) {\n    yield put(getErrorSearch(true));\n    console.log('hero not found');\n  }\n}\n\nfunction* getMoreCharacterSaga({ payload }: ReturnType<typeof getSearch>): SagaIterator {\n  yield delay(500);\n\n  const data = yield call(getCharactersAPI, payload);\n\n  yield put(setCharactersMore(data.results));\n}\n\nexport function* seacrhWatcher():SagaIterator {\n  yield takeEvery(CharactersSearch.LOAD_SEARCH, getSearchSaga);\n  yield takeEvery(CharactersSearch.LOAD_PAGE, getMoreCharacterSaga);\n}\n","import { fork, all } from 'redux-saga/effects';\nimport { charactersWatcher } from '../features/components/CharactersList/charactersList.sagas';\nimport { detailsWatcher } from '../features/components/pages/DetailsPage/detailsPage.sagas';\nimport { seacrhWatcher } from '../features/components/CharactersSearch/charactersSearch.sagas';\n\nfunction* rootSaga(): Generator {\n  yield all([fork(charactersWatcher), fork(detailsWatcher), fork(seacrhWatcher)]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware),\n\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './core/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}